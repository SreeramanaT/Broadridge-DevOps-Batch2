13.235.13.1


[root@ip-172-31-26-97 docker]# ls -1
builder
buildkit
containers		Container DB and Meta
image			IMAGE DB and META
network			Docker networking
overlay2		Layers
plugins
runtimes
swarm
tmp
trust
volumes			Docker Volume
===================================================
How to create image?
1. using Existing container - 
2. Using Dockerfile - 
============================================
jenkins

What user jenkisn contaienr is running?
What is env var set in jenkins container = env
Is there volume attached to jenkins? inspect ----?
What port jenkins allow to expose?
==========================================
jenkins
	openjdk:8-jdk
		buildpack-deps:buster-scm
			buildpack-deps:buster-curl
				debian:buster
					scratch
=================================================
RULE OF DOCKERFILE
=========================================
EACH LINE WOULD CREATE ONE LAYER
	META LAYER would be into "IMAGE"
	DATA layer would go to overlay2
EACH LINE layer would have a parent which is pre line layer

FROM ubuntu
MAINTAINER Rajesh kumar DevOPs@rajeshkumar.xyz
RUN touch /opt/rajesh1.txt
RUN touch /opt/rajesh2.txt
RUN touch /opt/rajesh3.txt
RUN apt-get update
RUN apt-get install git -y
RUN apt-get install apache2 -y
RUN sudo apt-get install openjdk-8-jre
ENV RAJESH_HOME IDONTKNW
COPY devopsschool.txt /opt/

docker build -t raj1 .


docker build -f doc2 -t raj2 .

=========================================
What should be PID 1 and how?
===============================
CMD
	CMD can be replaced.
ENTRYPOINT
	ENTRYPOINT CAN not be replaced.
	cmd passed to image of ENTRYPOINT, add a paramter


 125  cd etc/
  126  ls
  127  docker ps
  128  docker attach 9f4842737a5b
  129  clear
  130  ls
  131  exit
  132  cd
  133  ls
  134  mkdir raj
  135  cd raj/
  136  clear
  137  vi dockerfile
  138  more dockerfile
  139  clear
  140  docker build -t raj1 .
  141  clear
  142  docker images
  143  docker run -it raj1
  144  docker history raj1
  145  c
  146  clear
  147  ls
  148  touch devopsschool.txt
  149  ls
  150  ls
  151  vi doc2
  152  docker build -t -f doc2 raj2 .
  153  docker build -f doc2 -t raj2 .
  154  vi doc2
  155  docker build -f doc2 -t raj2 .
  156  vi doc2
  157  docker build -f doc2 -t raj2 .
  158  clear
  159  docker images
  160  docker run -it raj2
  161  c
  162  clear
  163  docker run ubuntu ls
  164  clear
  165  docker stop $(docker ps -a -q)
  166  docker rm $(docker ps -a -q)
  167  clear
  168  docker ps -a
  169  docker run ubuntu
  170  docker ps -a
  171  docker run ubuntu ls
  172  docker ps -a
  173  clear
  174  docker run jenkins
  175  docker ps -a
  176  docker run jenkins ls
  177  docker ps -a
  178  history
  133  clear
  134  docker ps
  135  docker inspect 5df4972aa86c
  136  clear
  137  docker ps -a
  138  docker exec 5df4972aa86c ps -eaf
  139  docker exec 5df4972aa86c env
  140  clear
  141  docker inspect 5df4972aa86c
  142*
  143  docker ps
  144  docker inspect 5df4972aa86c | grep -i volume
  145  clear
  146  docker ps
  147  docker exec 5df4972aa86c df -kh
  148  clear
  149  ls
  150  cd /var/lib/docker
  151  clear
  152  find . -name rajesh(
  153  find . -name rajesh*
  154  watch find . -name rajesh*
  155  history

LAB - 
https://www.devopsschool.com/tutorial/docker/dockerfile/dockerfile-example-sample-

lab.html

13.233.230.169









